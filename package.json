{
  "name": "juvix-mode",
  "version": "0.1.3",
  "license": "GPL-3.0",
  "description": "Juvix IDE support for VSCode",
  "displayName": "Juvix",
  "publisher": "Heliax",
  "icon": "assets/tara.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/anoma/vscode-juvix.git"
  },
  "bugs": {
    "url": "https://github.com/anoma/vscode-juvix/issues"
  },
  "directories": {
    "test": "test"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "keywords": [
    "juvix",
    "language",
    "programming"
  ],
  "galleryBanner": {
    "theme": "light"
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "package": "vsce package -o juvix-mode.vsix",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "fix": "prettier --write . && eslint -c .eslintrc.js --ext ts ./src  --fix",
    "test": "eslint src --ext ts && tsc --noEmit",
    "upgrade-dependencies": "ncu -u"
  },
  "main": "./out/extension.js",
  "extensionDependencies": [],
  "devDependencies": {
    "@types/node": "^18.11.15",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.46.1",
    "@typescript-eslint/parser": "^5.46.1",
    "@vscode/test-electron": "^2.2.1",
    "esbuild": "^0.16.6",
    "eslint": "^8.29.0",
    "eslint-plugin-header": "^3.1.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.8.1",
    "rimraf": "^3.0.2",
    "tsc-watch": "^6.0.0",
    "typescript": "^4.9.4",
    "vsce": "^1.91.0",
    "vscode-dts": "^0.3.3",
    "vscode-test-adapter-api": "^1.9.0"
  },
  "prettier": {
    "printWidth": 80,
    "tabWidth": 2,
    "arrowParens": "avoid",
    "semi": true,
    "singleQuote": true,
    "bracketSpacing": true
  },
  "activationEvents": [
    "onLanguage:Juvix",
    "onLanguage:JuvixAsm",
    "onLanguage:JuvixCore",
    "workspaceContains:**/juvix-mode.yaml"
  ],
  "editor.semanticHighlighting.enabled": true,
  "editor.autoDetect": true,
  "contributes": {
    "configurationDefaults": {
      "[Juvix]": {
        "editor.insertSpaces": false
      },
      "editor.semanticTokenColorCustomizations": {
        "enabled": true,
        "rules": {
          "axiom": {
            "foreground": "#f07171"
          },
          "comment": {
            "foreground": "#646464",
            "fontStyle": "italic"
          },
          "constructor": {
            "foreground": "#a37acc"
          },
          "error": {
            "foreground": "#bd3744",
            "fontStyle": "bold"
          },
          "function": {
            "foreground": "#f2ae49"
          },
          "inductive": {
            "foreground": "#86b300"
          },
          "keyword": {
            "foreground": "#399ee6"
          },
          "module": {
            "foreground": "#4e5e78"
          },
          "number": {
            "foreground": "#8c48d0"
          },
          "string": {
            "foreground": "#f07171"
          }
        }
      }
    },
    "snippets": [
      {
        "language": "Juvix",
        "path": "./snippets/Juvix.json"
      }
    ],
    "languages": [
      {
        "id": "Juvix",
        "extensions": [
          ".juvix"
        ],
        "aliases": [
          "Juvix"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "JuvixAsm",
        "aliases": [
          "JuvixAsm"
        ],
        "extensions": [
          ".jva"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "JuvixCore",
        "aliases": [
          "JuvixCore"
        ],
        "extensions": [
          ".jvc"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "JuvixCore",
        "scopeName": "source.JuvixCore",
        "path": "./syntaxes/JuvixCore.tmLanguage.json"
      },
      {
        "language": "JuvixAsm",
        "scopeName": "source.JuvixAsm",
        "path": "./syntaxes/JuvixAsm.tmLanguage.json"
      }
    ],
    "semanticTokenScopes": [],
    "taskDefinitions": [
      {
        "type": "Juvix",
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "juvixerror",
        "owner": "juvixerror",
        "source": "Juvix Error",
        "fileLocation": "autoDetect",
        "pattern": [
          {
            "kind": "location",
            "regexp": "^(.+):(\\d+):(\\d+)-(\\d+): (\\w+).*",
            "file": 1,
            "line": 2,
            "column": 3,
            "endColumn": 4,
            "severity": 5
          },
          {
            "regexp": "(.*)",
            "message": 1
          },
          {
            "regexp": "(.*)",
            "message": 1
          },
          {
            "regexp": "(.*)",
            "message": 1
          },
          {
            "regexp": "(.*)",
            "message": 1,
            "loop": true
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "juvix-mode.getBinaryVersion",
        "title": "about",
        "category": "Juvix"
      },
      {
        "command": "juvix-mode.doctor",
        "title": "doctor",
        "category": "Juvix"
      },
      {
        "command": "juvix-mode.typecheck",
        "title": "typecheck",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.compile",
        "title": "compile",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.run",
        "title": "run",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.dev-parse",
        "title": "[dev] parse",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.dev-scope",
        "title": "[dev] scope",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+shift+d",
        "command": "juvix-mode.doctor",
        "args": "Juvix: doctor"
      },
      {
        "key": "ctrl+shift+t",
        "command": "juvix-mode.typecheck",
        "args": "Juvix: typecheck",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "ctrl+shift+c",
        "command": "juvix-mode.compile",
        "args": "Juvix: compile",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "ctrl+shift+r",
        "command": "juvix-mode.run",
        "args": "Juvix: run",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "alt+,",
        "command": "workbench.action.navigateBack"
      },
      {
        "key": "alt+.",
        "command": "workbench.action.navigateForward"
      }
    ],
    "submenus": [
      {
        "id": "juvix-submenu",
        "label": "Juvix Tasks",
        "icon": "üõ†Ô∏è"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "juvix-submenu",
          "group": "navigation"
        }
      ],
      "juvix-submenu": [
        {
          "command": "juvix-mode.typecheck",
          "group": "navigation"
        },
        {
          "command": "juvix-mode.compile",
          "group": "navigation"
        },
        {
          "command": "juvix-mode.run",
          "group": "navigation"
        },
        {
          "command": "juvix-mode.doctor",
          "group": "navigation@1.31"
        }
      ]
    },
    "configuration": {
      "title": "Juvix Mode",
      "properties": {
        "juvix-mode.statusBarIcons": {
          "type": "boolean",
          "default": false,
          "scope": "machine-overridable",
          "description": "Show icons on the status bar to run Juvix commands"
        },
        "juvix-mode.bin.name": {
          "type": "string",
          "default": "juvix",
          "scope": "machine-overridable",
          "description": "Name of the executable of Juvix. e.g. juvix-0.2.0"
        },
        "juvix-mode.bin.path": {
          "type": "string",
          "default": "",
          "scope": "machine-overridable",
          "description": "Path to the executable of Juvix. e.g. /usr/local/bin/"
        },
        "juvix-mode.revealPanel": {
          "type": "string",
          "default": "always",
          "enum": [
            "always",
            "silent",
            "never"
          ],
          "description": "Reveal panel for typechecking/compilation output"
        },
        "juvix-mode.opts": {
          "type": "object",
          "order": 1,
          "description": "Global flags for the Juvix CLI.",
          "properties": {
            "noColors": {
              "type": "boolean",
              "description": " Disable ANSI formatting"
            },
            "showNameIds": {
              "type": "boolean",
              "description": "Show the unique number of each identifier when pretty printing"
            },
            "onlyErrors": {
              "type": "boolean",
              "description": "Only print errors in a uniform format"
            },
            "noTermination": {
              "type": "boolean",
              "description": "Disable termination checking"
            },
            "noPositivity": {
              "type": "boolean",
              "description": "Disable positivity checking for inductive types"
            },
            "noStdlib": {
              "type": "boolean",
              "description": "Do not use the standard library"
            }
          },
          "additionalProperties": false,
          "default": {
            "noColors": false,
            "showNameIds": false,
            "onlyErrors": false,
            "noTermination": false,
            "noPositivity": false,
            "noStdlib": false
          }
        },
        "juvix-mode.compilationTarget": {
          "type": "string",
          "default": "native",
          "enum": [
            "c",
            "native",
            "wasm",
            "html"
          ],
          "scope": "machine-overridable",
          "description": "Compilation backend"
        },
        "juvix-mode.compilationRuntime": {
          "type": "string",
          "default": "wasi-standalone",
          "enum": [
            "standalone",
            "wasi-standalone",
            "wasi-libc"
          ],
          "scope": "machine-overridable",
          "description": "Runtime used for compilation"
        },
        "juvix-mode.compilationOutputFile": {
          "type": "string",
          "default": "",
          "scope": "machine-overridable",
          "description": "File name for the compiled file"
        },
        "juvix-mode.input.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable Juvix input mode."
        },
        "juvix-mode.input.customTranslations": {
          "type": "object",
          "items": {
            "type": "string",
            "description": "Unicode character to translate to"
          },
          "default": {},
          "markdownDescription": "Add additional input Unicode translations. Example: `{\"foo\": \"‚ò∫\"}` will correct `\\foo` to `‚ò∫`."
        },
        "juvix-mode.input.languages": {
          "type": "array",
          "default": [
            "Juvix",
            "JuvixASM",
            "JuvixCore"
          ],
          "markdownDescription": "Enable Juvix Unicode input in other file types.",
          "items": {
            "type": "string",
            "description": "the name of a language, e.g. 'haskell', 'markdown'"
          }
        },
        "juvix-mode.input.leader": {
          "type": "string",
          "default": "\\",
          "markdownDescription": "Leader key to trigger input mode."
        },
        "juvix-mode.input.eagerReplacementEnabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable eager replacement of abbreviations that uniquely identify a symbol."
        }
      }
    }
  },
  "__metadata": {
    "id": "a5e2256d-697e-4c7e-bf3d-96779842b982",
    "publisherDisplayName": "Heliax",
    "publisherId": "9e6dae1a-f8fb-4b28-b2c6-bf8cc8ea4f11",
    "isPreReleaseVersion": false
  },
  "dependencies": {
    "@vscode/vsce": "^2.15.0",
    "mobx": "6.7.0",
    "run": "^1.4.0",
  }
}
